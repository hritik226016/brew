- // MIR for `main` before GVN
+ // MIR for `main` after GVN
  
  fn main() -> () {
      let mut _0: ();
      let _1: bool;
      let mut _2: *mut u8;
      scope 1 (inlined dangling_mut::<u8>) {
      }
      scope 2 (inlined Foo::<u8>::cmp_ptr) {
          let mut _3: *const u8;
          let mut _4: *mut u8;
          let mut _5: *const u8;
          scope 3 (inlined std::ptr::eq::<u8>) {
          }
      }
  
      bb0: {
          StorageLive(_1);
          StorageLive(_2);
          _2 = const {0x8000000000000000 as *mut u8};
          StorageLive(_3);
          StorageLive(_4);
-         _4 = copy _2;
-         _3 = copy _2 as *const u8 (PtrToPtr);
+         _4 = const {0x8000000000000000 as *mut u8};
+         _3 = const {0x8000000000000000 as *const u8};
          StorageDead(_4);
          StorageLive(_5);
-         _5 = const Foo::<u8>::SENTINEL as *const u8 (PtrToPtr);
-         _1 = Eq(copy _3, copy _5);
+         _5 = const {0x8000000000000000 as *const u8};
+         _1 = const true;
          StorageDead(_5);
          StorageDead(_3);
          StorageDead(_2);
          StorageDead(_1);
          _0 = const ();
          return;
      }
  }
  
