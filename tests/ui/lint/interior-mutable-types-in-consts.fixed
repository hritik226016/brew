//@ check-pass
//@ run-rustfix

#![allow(dead_code)] // for rustfix
#![feature(reentrant_lock)]

use std::sync::{Once, Barrier, Condvar, LazyLock, Mutex, OnceLock, ReentrantLock, RwLock};
use std::sync::atomic::{AtomicBool, AtomicPtr, AtomicI32, AtomicU32};

#[allow(interior_mutable_consts)] static A: Once = Once::new();
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static B: Barrier = Barrier::new(0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static C: Condvar = Condvar::new();
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static D: LazyLock<i32> = LazyLock::new(|| 0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static E: Mutex<i32> = Mutex::new(0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static F: OnceLock<i32> = OnceLock::new();
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static G: ReentrantLock<i32> = ReentrantLock::new(0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static H: RwLock<i32> = RwLock::new(0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static I: AtomicBool = AtomicBool::new(false);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static J: AtomicPtr<i32> = AtomicPtr::new(std::ptr::null_mut());
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static K: AtomicI32 = AtomicI32::new(0);
//~^ WARN interior mutability in `const` item
#[allow(interior_mutable_consts)] static L: AtomicU32 = AtomicU32::new(0);
//~^ WARN interior mutability in `const` item

#[allow(interior_mutable_consts)] pub(crate) static X: Once = Once::new();
//~^ WARN interior mutability in `const` item

fn main() {
    #[allow(interior_mutable_consts)] static Z: Once = Once::new();
    //~^ WARN interior mutability in `const` item
}

struct S;
impl S {
    const Z: Once = Once::new(); // not a const-item
}
