error[E0716]: temporary value dropped while borrowed
  --> $DIR/if-let-rescope-borrowck-suggestions.rs:23:39
   |
LL |     do_something(if let Some(value) = Droppy.get_ref() { value } else { &0 });
   |                                       ^^^^^^                   - temporary value is freed at the end of this statement
   |                                       |
   |                                       creates a temporary value which is freed while still in use
   |
note: lifetime for temporaries generated in `if let`s have been shorted in Edition 2024
  --> $DIR/if-let-rescope-borrowck-suggestions.rs:23:65
   |
LL |     do_something(if let Some(value) = Droppy.get_ref() { value } else { &0 });
   |                                                                 ^
help: consider using a `let` binding to create a longer lived value
   |
LL ~     let binding = Droppy;
LL ~     do_something(if let Some(value) = binding.get_ref() { value } else { &0 });
   |
help: consider rewriting the `if` into `match` which preserves the extended lifetime
   |
LL |     do_something(match Droppy.get_ref()  { Some(value) => { value } _ => { &0 }});
   |                  ~~~~~                   ++++++++++++++++           ~~~~       +

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0716`.
