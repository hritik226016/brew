error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:27:8
   |
LL |     if let Some(_value) = droppy().get() {
   |        ^^^^^^^^^^^^^^^^^^^--------^^^^^^
   |                           |
   |                           this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:35:5
   |
LL |     } else {
   |     ^
note: the lint level is defined here
  --> $DIR/lint-if-let-rescope.rs:3:9
   |
LL | #![deny(if_let_rescope)]
   |         ^^^^^^^^^^^^^^

error: a `match` with a single arm can preserve the drop order up to Edition 2021
  --> $DIR/lint-if-let-rescope.rs:27:5
   |
LL | /     if let Some(_value) = droppy().get() {
LL | |
LL | |
LL | |
...  |
LL | |         // do something else
LL | |     }
   | |_____^
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: rewrite this `if let` into `match`
   |
LL |     match droppy().get() {
   |     ~~~~~
help: rewrite this `if let` into `match`
   |
LL |     if let Some(_value) = droppy().get() { Some(_value) => {
   |                                          +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     }}
   |      +
help: rewrite this `if let` into `match`
   |
LL |     } _ => {
   |       ~~~~

error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:42:8
   |
LL |     if let Some(_value) = droppy().get() {
   |        ^^^^^^^^^^^^^^^^^^^--------^^^^^^
   |                           |
   |                           this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:50:5
   |
LL |     } else if let Some(_value) = droppy().get() {
   |     ^

error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:50:15
   |
LL |     } else if let Some(_value) = droppy().get() {
   |               ^^^^^^^^^^^^^^^^^^^--------^^^^^^
   |                                  |
   |                                  this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:58:5
   |
LL |     }
   |     ^

error: a `match` with a single arm can preserve the drop order up to Edition 2021
  --> $DIR/lint-if-let-rescope.rs:42:5
   |
LL | /     if let Some(_value) = droppy().get() {
LL | |
LL | |
LL | |
...  |
LL | |         // do something else
LL | |     }
   | |_____^
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: rewrite this `if let` into `match`
   |
LL |     match droppy().get() {
   |     ~~~~~
help: rewrite this `if let` into `match`
   |
LL |     } else { match droppy().get() {
   |            ~~~~~~~
help: rewrite this `if let` into `match`
   |
LL |     if let Some(_value) = droppy().get() { Some(_value) => {
   |                                          +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     } else if let Some(_value) = droppy().get() { Some(_value) => {
   |                                                 +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     } _ => {}}}}
   |       ++++++++++
help: rewrite this `if let` into `match`
   |
LL |     } _ => if let Some(_value) = droppy().get() {
   |       ~~~~

error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:64:15
   |
LL |     } else if let Some(_value) = droppy().get() {
   |               ^^^^^^^^^^^^^^^^^^^--------^^^^^^
   |                                  |
   |                                  this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:71:5
   |
LL |     } else if droppy().get().is_none() {
   |     ^

error: a `match` with a single arm can preserve the drop order up to Edition 2021
  --> $DIR/lint-if-let-rescope.rs:64:12
   |
LL |       } else if let Some(_value) = droppy().get() {
   |  ____________^
LL | |
LL | |
LL | |
...  |
LL | |
LL | |     }
   | |_____^
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: rewrite this `if let` into `match`
   |
LL |     } else { match droppy().get() {
   |            ~~~~~~~
help: rewrite this `if let` into `match`
   |
LL |     } else if let Some(_value) = droppy().get() { Some(_value) => {
   |                                                 +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     }}}
   |      ++
help: rewrite this `if let` into `match`
   |
LL |     } _ => if droppy().get().is_none() {
   |       ~~~~

error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:77:27
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(1) } else { None } } {
   |                           ^^^^^^^^^^^^^^^^^^^------^^^^^^
   |                                              |
   |                                              this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:77:69
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(1) } else { None } } {
   |                                                                     ^

error: a `match` with a single arm can preserve the drop order up to Edition 2021
  --> $DIR/lint-if-let-rescope.rs:77:24
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(1) } else { None } } {
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: rewrite this `if let` into `match`
   |
LL |     if let Some(1) = { match Droppy.get() { Some(1) } else { None } } {
   |                        ~~~~~
help: rewrite this `if let` into `match`
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(_value) => { Some(1) } else { None } } {
   |                                                           +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(1) } else { None }} } {
   |                                                                                    +
help: rewrite this `if let` into `match`
   |
LL |     if let Some(1) = { if let Some(_value) = Droppy.get() { Some(1) } _ => { None } } {
   |                                                                       ~~~~

error: `if let` assigns a shorter lifetime since Edition 2024
  --> $DIR/lint-if-let-rescope.rs:89:22
   |
LL |     if let () = { if let Some(_value) = Droppy.get() {} } {
   |                      ^^^^^^^^^^^^^^^^^^^------^^^^^^
   |                                         |
   |                                         this value has a significant drop implementation which may observe a major change in drop order and requires your discretion
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: the value is now dropped here in Edition 2024
  --> $DIR/lint-if-let-rescope.rs:89:55
   |
LL |     if let () = { if let Some(_value) = Droppy.get() {} } {
   |                                                       ^

error: a `match` with a single arm can preserve the drop order up to Edition 2021
  --> $DIR/lint-if-let-rescope.rs:89:19
   |
LL |     if let () = { if let Some(_value) = Droppy.get() {} } {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this changes meaning in Rust 2024
   = note: for more information, see issue #124085 <https://github.com/rust-lang/rust/issues/124085>
help: rewrite this `if let` into `match`
   |
LL |     if let () = { match Droppy.get() {} } {
   |                   ~~~~~
help: rewrite this `if let` into `match`
   |
LL |     if let () = { if let Some(_value) = Droppy.get() { Some(_value) => {} } {
   |                                                      +++++++++++++++++
help: rewrite this `if let` into `match`
   |
LL |     if let () = { if let Some(_value) = Droppy.get() {} _ => {}} } {
   |                                                         ++++++++

error: aborting due to 11 previous errors

